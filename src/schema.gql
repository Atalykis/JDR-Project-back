# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  username: String!
  password: String!
}

type Token {
  token: String!
}

type PointType {
  x: Float!
  y: Float!
}

type LineType {
  color: String!
  thickness: Float!
  points: [PointType!]!
}

type TokenIdType {
  name: String!
  owner: String!
  adventure: String!
}

type PositionType {
  x: Float!
  y: Float!
}

type SizeType {
  width: Float!
  height: Float!
}

type TokenType {
  id: TokenIdType!
  position: PositionType!
  size: SizeType!
  imageSrc: String!
}

type BoardType {
  roomName: String!
  lines: [LineType!]!
  tokens: [TokenType!]!
}

type Character {
  name: String!
  owner: String!
  adventure: String!
  description: String!
}

type Room {
  name: String!
  gm: String!
  adventure: String!
  characters: [Character!]!
  members: [String!]!
}

type Adventure {
  name: String!
  gm: String!
}

type StatisticValueType {
  min: Float!
  max: Float!
}

type CharacteristicType {
  name: String!
  value: String!
}

type StatisticType {
  name: String!
  value: StatisticValueType!
}

type CharacterTemplate {
  name: String!
  universe: String!
  characteristics: [CharacteristicType!]!
  statistics: [StatisticType!]!
}

input PointInput {
  x: Float!
  y: Float!
}

input LineInput {
  color: String!
  thickness: Float!
  points: [PointInput!]!
}

input TokenIdInput {
  name: String!
  owner: String!
  adventure: String!
}

input PositionInput {
  x: Float!
  y: Float!
}

input SizeInput {
  width: Float!
  height: Float!
}

input TokenInput {
  id: TokenIdInput!
  position: PositionInput!
  size: SizeInput!
  imageSrc: String!
}

input StatisticValueInput {
  min: Float!
  max: Float!
}

input CharacteristicInput {
  name: String!
  value: String!
}

input StatisticInput {
  name: String!
  value: StatisticValueInput!
}

type Query {
  adventure(name: String!): Adventure!
  adventures: [Adventure!]!
  user(username: String!): User!
  room(name: String!): Room
  rooms(adventure: String!): [Room!]!
  characters(adventure: String!): [Character!]!
  character(adventure: String!, name: String!): Character!
  board(roomName: String!): BoardType!
  universeCharacterTemplates(universe: String!): [CharacterTemplate!]!
  characterTemplate(universe: String!, name: String!): CharacterTemplate!
}

type Mutation {
  createAdventure(name: String!): Adventure!
  register(password: String!, username: String!): User!
  login(password: String!, username: String!): Token!
  createRoom(adventure: String!, name: String!): Room!
  joinRoom(room: String!): Room!
  leaveRoom(room: String!): Room!
  kickPlayer(player: String!, room: String!): Room!
  addCharacter(character: CharacterInput!, room: String!): Room!
  createCharacter(description: String!, adventure: String!, name: String!): Character!
  draw(line: LineInput!, roomName: String!): BoardType!
  move(token: TokenInput!, roomName: String!): BoardType!
  createCharacterTemplate(universe: String!, name: String!): CharacterTemplate!
  addCharacteristic(characteristic: CharacteristicInput!, id: CharacterTemplateIdInput!): CharacterTemplate!
  setCharacteristicValue(characteristic: CharacteristicInput!, id: CharacterTemplateIdInput!): CharacterTemplate!
  addStatistic(statistic: StatisticInput!, id: CharacterTemplateIdInput!): CharacterTemplate!
  setStatisticValue(statistic: StatisticInput!, id: CharacterTemplateIdInput!): CharacterTemplate!
}

input CharacterInput {
  name: String!
  owner: String!
  adventure: String!
}

input CharacterTemplateIdInput {
  name: String!
  universe: String!
}
